# version: "3.7"

# services:

#   nginx:
#     container_name: core_web
#     restart: on-failure
#     image: jonasal/nginx-certbot:latest
#     env_file:
#       - .env.nginx
#     volumes:
#       - nginx_secrets:/etc/letsencrypt
#       - ./nginx/user_conf.d:/etc/nginx/user_conf.d
#     ports:
#       - "80:80"
#       - "443:443"
#     depends_on:
#       - web

#   web:
#     container_name: react_app
#     restart: on-failure
#     build:
#       context: .
#       dockerfile: Dockerfile.prod
#     volumes:
#       - ./src:/app/src
#     ports:
#       - "5000:5000"
#     command: >
#       sh -c "yarn build && serve -s build"
#     env_file:
#       - .env

# volumes:
#   nginx_secrets:

# version: "3.7"

# services:
#   django:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     volumes:
#       - django_static_volume:/usr/src/app/static
#     expose:
#       - 8000
#     env_file:
#       - ./backend/.env
#     command: gunicorn mainapp.wsgi:application --bind 0.0.0.0:8000
#     depends_on:
#       - db
#   db:
#     image: postgres:12.0-alpine
#     volumes:
#       - postgres_data:/var/lib/postgresql/data/
#     env_file:
#       - ./postgres/.env
#   react:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#       args:
#         - API_SERVER=${ENV_API_SERVER}
#     volumes:
#       - react_static_volume:/usr/src/app/build/static
#     expose:
#       - 3000
#     env_file:
#       - .env
#     command: serve -s build -l 3000
#     depends_on:
#       - django

#   nginx:
#     restart: always
#     build: ./nginx
#     volumes:
#       - django_static_volume:/usr/src/app/django_files/static
#       - react_static_volume:/usr/src/app/react_files/static
#     ports:
#       - 80:80
#     depends_on:
#       - react

# volumes:
#   postgres_data:
#   django_static_volume:
#   react_static_volume:
